package xyz.soongkun.roast.module.t_poster.action;import com.opensymphony.xwork2.ActionSupport;import java.util.HashMap;import java.util.Map;import org.apache.commons.lang3.StringUtils;import org.apache.shiro.SecurityUtils;import org.apache.shiro.subject.Subject;import org.slf4j.Logger;import org.slf4j.LoggerFactory;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.context.annotation.Scope;import org.springframework.stereotype.Controller;import xyz.soongkun.roast.module.t_poster.service.PosterService;import xyz.soongkun.roast.module.t_user.model.User;import xyz.soongkun.roast.util.ContextUtil;@Controller@Scope("prototype")public class PosterAction extends ActionSupport {    private static final Logger logger = LoggerFactory.getLogger(PosterAction.class);    private Map<String, Object> data;    private String content;    @Autowired    private PosterService posterService;    public PosterAction() {    }    public String add() {        Subject currentUser = SecurityUtils.getSubject();        if (!currentUser.isAuthenticated()) {            return "toLogin";        } else if (ContextUtil.isGetRequest()) {            return "success";        } else {            this.data = new HashMap<>();            try {                if (StringUtils.isBlank(this.content) || this.content.length() < 1) {                    throw new Exception("发表的内容不能为空");                }                this.posterService.saveContent(this.content, (User)currentUser.getPrincipal());                this.data.put("code", 200);                this.data.put("msg", "发表成功");            } catch (Exception var3) {                this.data.put("code", 400);                this.data.put("msg", var3.getMessage());            }            return "pt";        }    }    public String getContent() {        return this.content;    }    public void setContent(String content) {        this.content = content;    }    public Map<String, Object> getData() {        return data;    }}