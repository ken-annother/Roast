package xyz.soongkun.roast.module.t_poster.dao;import org.hibernate.HibernateException;import org.hibernate.Query;import org.hibernate.Session;import org.hibernate.criterion.DetachedCriteria;import org.hibernate.transform.Transformers;import org.hibernate.type.StandardBasicTypes;import org.springframework.orm.hibernate5.HibernateCallback;import org.springframework.orm.hibernate5.HibernateTemplate;import org.springframework.stereotype.Repository;import xyz.soongkun.roast.module.t_poster.model.Poster;import javax.annotation.Resource;import java.util.List;import java.util.Map;@Repository("posterDao")public class PosterDaoImpl implements PosterDao {    @Resource    private HibernateTemplate hibernateTemplate;    public PosterDaoImpl() {    }    public void saveContent(Poster poster) {        this.hibernateTemplate.save(poster);    }    @Override    public List<Poster> query(DetachedCriteria detachedCriteria, Integer start, Integer pageCount) {        List<Poster> posterList = (List<Poster>) hibernateTemplate.findByCriteria(detachedCriteria,start,pageCount);        return posterList;    }    @Override    public Integer queryCount() {        Integer count = hibernateTemplate.execute(new HibernateCallback<Integer>() {            @Override            public Integer doInHibernate(Session session) throws HibernateException {                Query query = session.createSQLQuery("SELECT COUNT(id) COUNTID FROM t_poster")                        .addScalar("COUNTID", StandardBasicTypes.INTEGER)                        .setResultTransformer(Transformers.ALIAS_TO_ENTITY_MAP);                Map<String,Integer> result = (Map<String, Integer>) query.list().get(0);                return result.get("COUNTID");            }        });        return count;    }}