package xyz.soongkun.roast.realm;import org.apache.commons.lang3.StringUtils;import org.apache.shiro.authc.AuthenticationException;import org.apache.shiro.authc.AuthenticationInfo;import org.apache.shiro.authc.AuthenticationToken;import org.apache.shiro.authc.IncorrectCredentialsException;import org.apache.shiro.authc.SimpleAuthenticationInfo;import org.apache.shiro.authc.UnknownAccountException;import org.apache.shiro.authc.UsernamePasswordToken;import org.apache.shiro.authz.AuthorizationInfo;import org.apache.shiro.realm.AuthorizingRealm;import org.apache.shiro.subject.PrincipalCollection;import org.springframework.beans.factory.annotation.Autowired;import xyz.soongkun.roast.module.t_user.model.User;import xyz.soongkun.roast.module.t_user.service.UserService;public class MyRealm extends AuthorizingRealm {    @Autowired    private UserService userService;    public MyRealm() {    }    protected AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principalCollection) {        return null;    }    protected AuthenticationInfo doGetAuthenticationInfo(AuthenticationToken authenticationToken) throws AuthenticationException {        UsernamePasswordToken token = (UsernamePasswordToken)authenticationToken;        String email = token.getUsername();        String password = new String(token.getPassword());        User user = this.userService.getUserByEmail(email);        if (user == null) {            throw new UnknownAccountException();        } else if (StringUtils.isBlank(user.getPassword())) {            throw new AuthenticationException();        } else if (!user.getPassword().equals(password)) {            throw new IncorrectCredentialsException();        } else {            return new SimpleAuthenticationInfo(user, password, this.getName());        }    }}